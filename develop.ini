#
# Develop.ini for development environment gunicorn
# Uses simple JSON document for management of test users.
# See occams:sample.ini for more information about specific settings
# DO NOT USE FOR PRODUCTION

[app:main]
use = egg:occams

filter-with = who

pyramid.debug_all = true
pyramid.reload_templates = true
pyramid.default_locale_name = en
pyramid.includes = pyramid_debugtoolbar

debugtoolbar.hosts = 0.0.0.0/0

redis.url = redis://redis:6379/0

webassets.debug = true
webassets.auto_build = true

who.config_file = %(__file__)s
who.identifier_id = plugins:auth_tkt

redis.sessions.url = %(redis.url)s
redis.sessions.secret = sekrit
redis.sessions.prefix = occams-session:
redis.sessions.timeout = 36000

occams.apps =
  occams_datastore
  occams_accounts
  occams_forms
  occams_roster
  occams_studies
  occams_imports

occams.org.name = dev
occams.org.title = Test Orgnaization
occams.db.url = postgresql://occams@postgres/occams
occams.groups =

celery.broker.url = %(redis.url)s
celery.backend.url = %(redis.url)s
# Blame user for celery database connection
celery.blame = celery@localhost

studies.pid.package = occams_roster
roster.db.url = postgresql://occams@postgres/roster
studies.blob.dir = /files/blobs
studies.export.dir = /files/exports
studies.export.plans =
  occams_studies.exports.pid.PidPlan
  occams_studies.exports.enrollment.EnrollmentPlan
  occams_studies.exports.visit.VisitPlan
  occams_studies.exports.schema.SchemaPlan.list_all


[alembic]
script_location = occams:alembic/
sqlalchemy.url = postgresql://occams@postgres/occams
version_locations = occams_datastore:versions occams_forms:versions occams_studies:version occams_imports:versions
blame = bitcore@ucsd.edu

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 3000
worker_class = gevent
logconfig = %(__file__)s
errorlog = -
loglevel = INFO
reload = True
debug = True

[filter:who]
use = egg:repoze.who#config
config_file = %(__file__)s

[general]
request_classifier = repoze.who.classifiers:default_request_classifier
challenge_decider = repoze.who.classifiers:default_challenge_decider
remote_user_key = REMOTE_USER

[identifiers]
plugins =
  auth_tkt

[authenticators]
plugins =
  auth_tkt
  dev_users

[mdproviders]
plugins =
  dev_properties
  dev_groups

[challengers]
plugins =
  redirector;browser

[plugin:redirector]
use = repoze.who.plugins.redirector:make_plugin
login_url = /accounts/login
came_from_param = referrer

[plugin:auth_tkt]
# identification and authentication
use = repoze.who.plugins.auth_tkt:make_plugin
secret = AUTH_SPECIFIC_TOKEN
cookie_name = auth_tkt
secure = False
include_ip = True
timeout = 3600
reissue_time = 360

[plugin:dev_users]
use = who_dev:JSONAuthenticatorPlugin
# Test users, modify as needed and restart app service
data = {
    "develop@local":  {
      "password": "develop",
      "properties": {"first_name": "Developer", "last_name": "User", "email": "develop@local"},
      "groups": ["member", "administrator"]
    }
  }

[plugin:dev_properties]
use = who_dev:JSONPropertiesPlugin
source_key = properties

[plugin:dev_groups]
use = who_dev:JSONPropertiesPlugin
source_key = groups

[loggers]
keys = root, sqlalchemy, alembic, webassets, occams

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_occams]
level = DEBUG
handlers =
qualname = occams

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_webassets]
level = INFO
handlers =
qualname = webassets

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
